# We don't upgrade to version 3 as it doesn't support extends (yet?)
# https://github.com/moby/moby/issues/31101
version: '2'
services:
  app:
    extends:
      file: common.yml
      service: app

    # Not too sure about this as there seem to be IO errors with using volumes like
    # this, eg corrupt files and missing files.
    # We use the sakai.properties from the production build
    volumes:
     - ./tomcat/lib:/opt/tomcat/sakai-lib
     - ./tomcat/components:/opt/tomcat/components
     - ./tomcat/webapps:/opt/tomcat/webapps
     - ./override:/opt/tomcat/sakai/override
     - ./placeholder.properties:/opt/tomcat/sakai/placeholder.properties
     - ./sakai.quartz.properties:/opt/tomcat/sakai/sakai.quartz.properties
     - ./log4j.properties:/opt/tomcat/sakai/log4j.properties
     - ./local.properties:/opt/tomcat/sakai/local.properties
     - ./sakai-jaas.conf:/opt/tomcat/sakai/sakai-jaas.conf
     - ./krb5.conf:/opt/tomcat/sakai/krb5.conf
     - ./sakai-keytab:/opt/tomcat/sakai/sakai-keytab
     - ./jgroups-config.xml:/opt/tomcat/sakai/jgroups-config.xml
     - ./toolOrder.xml:/opt/tomcat/sakai/toolOrder.xml
     # Yourkit stuff
     - ./libyjpagent.so:/opt/yjp/bin/linux-x86-64/libyjpagent.so
     - ./startup_with_yjp.sh:/opt/tomcat/bin/startup_with_yjp.sh
    command: /opt/tomcat/bin/catalina.sh jpda run
    #command: /opt/tomcat/bin/startup_with_yjp.sh
    # This is needed to allow jmap (heap dumps_) to work, otherwise it fails
    security_opt:
    - seccomp:unconfined
    ports:
      # Allow debugger to connect.
      - "127.0.0.1:8000:8000"
    environment:
     SENTRY_DSN:
     SENTRY_FACTORY: uk.ac.ox.it.sentry.DockerSentryClientFactory
     CATALINA_OPTS_EXTRA:
     # In development this means we can read files without anything special
     SAKAI_USER: root
     DB_ENV_MYSQL_USER: sakai
     DB_ENV_MYSQL_PASSWORD: sakai
     DB_ENV_MYSQL_DATABASE: sakai
    links:
     - db
     - solr
    networks:
      backend:
        aliases:
          # All app servers can be referred to by this alias on the backend network
          - apps

  db:
    extends:
      file: common.yml
      service: db
    ports:
     - "3306:3306"
    networks:
     - backend

  web:
    extends:
      file: common.yml
      service: web
    links:
     - app
    ports:
     - "8080:80"
     - "8443:443"
    networks:
     - backend
    volumes:
      - shib-data:/var/run/shibboleth
      - ./shibboleth:/opt/shibboleth

  # Just re-use the apache one.
  shibd:
    build: ../apache
    environment:
      SERVERNAME:
      ENTITYID:
    entrypoint: /opt/scripts/shibd-entrypoint.sh
    command: /usr/sbin/shibd -u _shibd -g _shibd  -fF -c /etc/shibboleth/shibboleth2.xml
    volumes:
      - shib-data:/var/run/shibboleth
      - ./shibboleth:/opt/shibboleth

  solr:
    networks:
     - backend
    extends:
      file: common.yml
      service: solr

volumes:
  # We use the shib socket to talk between apache and shibd
  shib-data:

networks:
  backend: {}
